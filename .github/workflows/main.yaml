name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-24.04
    env:
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
      CORS_ORIGINS: ${{ vars.CORS_ORIGINS }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Lint with Ruff
        run: |
          ruff check .
          echo "✅ Ruff linting passed."

      # - name: Run tests with pytest
      #   run: |
      #     pytest --maxfail=1 --disable-warnings -v
      #     echo "✅ Pytest unit tests passed."

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Utilities
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Clean up Docker resources
        run: |
          docker system prune --all --volumes --force
          docker builder prune --all --force

  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Aggressive Docker cleanup
        run: |
          # Stop all running containers
          docker container stop $(docker container ls -aq) || true
          
          # Remove all containers
          docker container rm $(docker container ls -aq) || true
          
          # Remove unused images
          docker image prune -a -f
          
          # Clean system
          docker system prune -a -f --volumes
          
          # Show disk space after cleanup
          df -h
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Pull latest images
        run: |
          docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
      - name: Run Docker image to serve users
        run: |
          docker run -d -p 8080:8080 --ipc="host" --name jofitai-backend \
            -e GOOGLE_API_KEY="${{ secrets.GOOGLE_API_KEY }}" \
            -e SERPER_API_KEY="${{ secrets.SERPER_API_KEY }}" \
            -e CORS_ORIGINS="${{ vars.CORS_ORIGINS }}" \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest